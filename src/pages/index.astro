---
import { getCollection } from 'astro:content';
import Color from 'colorjs.io';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import FormattedDate from '../components/FormattedDate.astro';

const posts = (await getCollection('post'))
  .filter(
    (post) => !post.data.draft || (post.data.draft && import.meta.env.DEV),
  ) // draft는 개발 환경에서만 표시
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const postColors = posts.map((post) => {
  // 색상 정의
  const lightStart = new Color('lab(63 59.32 -1.47)');
  const lightEnd = new Color('lab(33 42.09 -43.19)');
  const lightRange = lightStart.range(lightEnd);
  const darkStart = new Color('lab(81 32.36 -7.02)');
  const darkEnd = new Color('lab(78 19.97 -36.75)');
  const darkRange = darkStart.range(darkEnd);
  // 각 포스트의 색상 계산
  const today = new Date();
  // 첫 포스트 날짜
  const firstPostDate = new Date(2024, 9, 28); // 2024년 10월 28일, js는 월을 0부터 시작함
  const timeSinceFirstPost = today.getTime() - firstPostDate.getTime();
  const timeSinceThisPost =
    today.getTime() - new Date(post.data.pubDate).getTime();
  const staleness = timeSinceThisPost / timeSinceFirstPost;
  return {
    light: lightRange(staleness).toString(),
    dark: darkRange(staleness).toString(),
  };
});
---

<html lang="kr">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="mx-auto max-w-2xl bg-[--bg] px-5 py-12 text-[--text]">
    <Header isGradation={false} />
    <main>
      <section>
        <ul class="space-y-16">
          {
            posts.map((post, index) => (
              <li>
                <article>
                  <a
                    href={`/post/${post.slug}/`}
                    class="group block transform transition-all duration-150 ease-out hover:scale-[1.005]"
                  >
                    <h2
                      class="text-[28px] font-black"
                      style={`
                      --lightLink: ${postColors[index].light}; 
                      --darkLink: ${postColors[index].dark}; 
                      color: var(--lightLink);
                    `}
                    >
                      {post.data.title}
                      {post.data.draft && import.meta.env.DEV && (
                        <span style="background: #ffeeba; color: #856404; padding: 0 4px; margin-left: 8px; border-radius: 4px; font-size: 0.8rem;">
                          초안
                        </span>
                      )}
                    </h2>
                    <div class="text-sm text-gray-700 dark:text-gray-300">
                      <FormattedDate date={new Date(post.data.pubDate)} />
                    </div>
                    <p class="mt-1 text-[--text]">{post.data.description}</p>
                  </a>
                </article>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
  </body>
</html>

<style>
  @media (prefers-color-scheme: dark) {
    h2 {
      color: var(--darkLink) !important;
    }
  }
</style>
